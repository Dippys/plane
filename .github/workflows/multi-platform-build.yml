name: Multi Platform Build

on:
  push:
    branches:
      - multi-platform-build

env:
  TARGET_BRANCH: ${{ github.ref_name }}
  PLATFORMS: linux/amd64

jobs:

  branch_build_push_frontend:
    runs-on: ubuntu-20.04
    env:
      FRONTEND_TAG: "FRONTEND_TAG"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3.3.0

      - name: Set Frontend Docker Tag 
        run: |
          rm -rf ./apiserver ./nginx ./deploy ./space
          if [ "${{ env.TARGET_BRANCH }}" == "master" ] && [ "${{ github.event_name }}" == "release" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-frontend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/plane-frontend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ github.event.release.tag_name }}
          elif [ "${{ env.TARGET_BRANCH }}" == "master" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-frontend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:stable
          else
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-frontend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ env.TARGET_BRANCH }}
          fi
          echo "FRONTEND_TAG=${TAG}" >> $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Frontend to Docker Container Registry
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./web/Dockerfile.web
          platforms: linux/arm64
          tags: ${{ env.FRONTEND_TAG }}
          push: true
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

  branch_build_push_space:
    runs-on: ubuntu-20.04
    env:
      SPACE_TAG: "SPACE_TAG"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3.3.0

      - name: Set Space Docker Tag 
        run: |
          rm -rf ./apiserver ./nginx ./deploy ./web
          if [ "${{ env.TARGET_BRANCH }}" == "master" ] && [ "${{ github.event_name }}" == "release" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-space${{ secrets.DOCKER_REPO_SUFFIX || '' }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/plane-space${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ github.event.release.tag_name }}
          elif [ "${{ env.TARGET_BRANCH }}" == "master" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-space${{ secrets.DOCKER_REPO_SUFFIX || '' }}:stable
          else
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-space${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ env.TARGET_BRANCH }}
          fi
          echo "SPACE_TAG=${TAG}" >> $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Downloading Space Source Code
        uses: actions/download-artifact@v3
        with:
          name: space-src-code

      - name: Build and Push Space to Docker Hub
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./space/Dockerfile.space
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ env.SPACE_TAG }}
          push: true
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

  branch_build_push_backend:
    runs-on: ubuntu-20.04
    env:
      BACKEND_TAG: "BACKEND_TAG"
    steps:
      - name: Set Backend Docker Tag 
        run: |
          rm -rf ./nginx ./deploy ./web ./space
          if [ "${{ env.TARGET_BRANCH }}" == "master" ] && [ "${{ github.event_name }}" == "release" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-backend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/plane-backend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ github.event.release.tag_name }}
          elif [ "${{ env.TARGET_BRANCH }}" == "master" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-backend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:stable
          else
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-backend${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ env.TARGET_BRANCH }}
          fi
          echo "BACKEND_TAG=${TAG}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Downloading Backend Source Code
        uses: actions/download-artifact@v3
        with:
          name: backend-src-code

      - name: Build and Push Backend to Docker Hub
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./apiserver
          file: ./Dockerfile.api
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ env.BACKEND_TAG }}
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

  branch_build_push_proxy:
    runs-on: ubuntu-20.04
    env:
      PROXY_TAG: "PROXY_TAG"
    steps:
      - name: Set Proxy Docker Tag 
        run: |
          rm -rf ./apiserver ./deploy ./web ./space
          if [ "${{ env.TARGET_BRANCH }}" == "master" ] && [ "${{ github.event_name }}" == "release" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-proxy${{ secrets.DOCKER_REPO_SUFFIX || '' }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/plane-proxy${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ github.event.release.tag_name }}
          elif [ "${{ env.TARGET_BRANCH }}" == "master" ]; then
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-proxy${{ secrets.DOCKER_REPO_SUFFIX || '' }}:stable
          else
            TAG=${{ secrets.DOCKERHUB_USERNAME }}/plane-proxy${{ secrets.DOCKER_REPO_SUFFIX || '' }}:${{ env.TARGET_BRANCH }}
          fi
          echo "PROXY_TAG=${TAG}" >> $GITHUB_ENV
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Plane-Proxy to Docker Hub
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./nginx
          file: ./Dockerfile
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ env.PROXY_TAG }}
          push: true
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
